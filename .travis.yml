language: csharp
dist: xenial
sudo: required
mono: none

addons:
  apt:
    packages:
    - tree

  snaps:
  - name: dotnet-sdk
    confinement: classic
    channel: latest/beta

matrix:
  include:
  - os: osx
  - os: linux

script:
 - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then sudo snap alias dotnet-sdk.dotnet dotnet; fi
 - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then .CI/install-dotnet-macos.sh; fi
 - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then sed -i 's|// import appmodel 1.0|import appmodel 1.0|g' Main.qml; fi
 - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then sed -i '' 's|// import appmodel 1.0|import appmodel 1.0|g' Main.qml; fi
 - export PATH=$PATH:$(pwd)/.dotnetsdk
 - dotnet --version
 - wget --quiet -O org.hl7.fhir.validator.jar https://fhir.github.io/latest-ig-publisher/org.hl7.fhir.validator.jar
 - dotnet publish --configuration Release --self-contained --runtime linux-x64 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:PublishReadyToRun=true
 # - cd bin/Release/netcoreapp3.0
 # - rm -f Hammer
 # - mv publish Hammer
 # - tree .
 # - mv Hammer/assets/run-hammer.sh Hammer/run-hammer.sh
 # - mv Hammer/assets/run-hammer.bat Hammer/run-hammer.bat
 # - rm -rf Hammer/assets
 # - zip -r Hammer.zip Hammer
 # - mkdir deploy/
 # - cp Hammer.zip deploy/
 - tree .
 - DEPLOY_URL=$(curl --upload-file bin/Release/netcoreapp3.0/linux-x64/publish/Hammer https://transfer.sh/Hammer)
 - echo -e "Zip is available for download at $DEPLOY_URL"

deploy:
  provider: pages
  repo: health-validator/latest
  target_branch: master
  local_dir: bin/Release/netcoreapp3.0/deploy
  skip_cleanup: true
  github_token: $GITHUB_TOKEN
  keep_history: false
  verbose: true
  on:
    branch: master
